{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport store from \"../vuex/store\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      name: \"\",\n      mobile: \"\",\n      address: \"\",\n      country: \"\",\n      paymentLoading: false,\n      paymentStatus: \"\",\n      cartEmpty: false,\n      total: 0,\n      products: []\n    };\n  },\n  methods: {\n    cashOnDelivery: function () {\n      const self = this;\n      if (this.name == \"\" || this.email == \"\" || this.mobile == \"\" || this.country == \"\" || this.address == \"\") {\n        swal.fire(\"Error\", \"Please fill all fields.\", \"error\");\n        return;\n      }\n      swal.fire({\n        title: 'Cash on delivery',\n        text: \"I want to process my order on cash on delivery.\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes'\n      }).then(async function (result) {\n        if (result.isConfirmed) {\n          let products = [];\n          const cookieParts = document.cookie.split(\"; \");\n          for (let a = 0; a < cookieParts.length; a++) {\n            const keyValue = cookieParts[a].split(\"=\");\n            if (keyValue[0] == \"products\") {\n              products = keyValue[1];\n              break;\n            }\n          }\n          self.paymentLoading = true;\n          self.paymentStatus = \"Processing your order...\";\n          const formData = new FormData();\n          formData.append(\"products\", products);\n          formData.append(\"name\", self.name);\n          formData.append(\"email\", self.email);\n          formData.append(\"mobile\", self.mobile);\n          formData.append(\"country\", self.country);\n          formData.append(\"address\", self.address);\n          const response = await axios.post(self.$apiURL + \"/cashOnDelivery\", formData);\n          self.paymentLoading = false;\n          self.paymentStatus = \"\";\n          if (response.data.status == \"success\") {\n            swal.fire(\"Success\", response.data.message, \"success\");\n            document.cookie = \"products=\" + JSON.stringify([]);\n            store.commit(\"setCartCounter\", 0);\n            self.cartEmpty = true;\n          } else {\n            swal.fire(\"Error\", response.data.message, \"error\");\n          }\n        }\n      });\n    }\n  },\n  mounted: async function () {\n    const self = this;\n    const cookieParts = document.cookie.split(\"; \");\n    this.total = 0;\n    for (let a = 0; a < cookieParts.length; a++) {\n      const keyValue = cookieParts[a].split(\"=\");\n      if (keyValue[0] == \"products\") {\n        const products = JSON.parse(keyValue[1]);\n        this.products = products;\n        for (let a = 0; a < products.length; a++) {\n          this.total += products[a].units * products[a].price;\n        }\n        break;\n      }\n    }\n    const response = await axios.post(this.$apiURL + \"/getConfigurations\", null);\n    if (response.data.status == \"success\") {\n      let configurations = response.data.configurations;\n      if (configurations != null) {\n        const user = store.getters.getUser;\n        if (user != null) {\n          this.name = user.name;\n          this.email = user.email;\n        }\n      }\n    }\n    this.cartEmpty = this.total == 0;\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","swal","store","data","email","name","mobile","address","country","paymentLoading","paymentStatus","cartEmpty","total","products","methods","cashOnDelivery","self","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","cookieParts","document","cookie","split","a","length","keyValue","formData","FormData","append","response","post","$apiURL","status","message","JSON","stringify","commit","mounted","parse","units","price","configurations","user","getters","getUser"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/client/src/components/CheckoutComponent.vue"],"sourcesContent":["<template>\r\n\t<div class=\"section no-pad-bot\" id=\"index-banner\">\r\n\t\t<div class=\"container\">\r\n\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col m8\">\r\n\t\t\t\t\t<h1 class=\"text-center\">Checkout</h1>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"row\">\r\n\t\t\t\t<div class=\"col m8\">\r\n\t\t\t\t\t<div class=\"card\">\r\n\r\n\t                    <div class=\"card-body\">\r\n\t                    \t<p v-if=\"cartEmpty\" style=\"padding: 20px;\">The cart is empty.</p>\r\n\r\n\t                    \t<form v-else v-if=\"!cartEmpty\">\r\n\t                    \t\t<div class=\"input-field col m6\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"name\" name=\"name\" type=\"text\" required v-model=\"name\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"name\">Name</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"email\" name=\"email\" type=\"email\" required v-model=\"email\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"email\">E-mail</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"mobile\" name=\"mobile\" type=\"text\" required v-model=\"mobile\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"mobile\">Mobile</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\r\n\t\t\t\t\t\t\t\t\t<input id=\"country\" name=\"country\" type=\"text\" required v-model=\"country\" />\r\n\t\t\t\t\t\t\t\t\t<label for=\"country\">Country</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div class=\"input-field col m6\">\r\n\t\t\t\t\t\t\t\t\t<textarea id=\"address\" name=\"address\" class=\"materialize-textarea\" required v-model=\"address\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<label for=\"address\">Address</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<p v-text=\"paymentStatus\"></p>\r\n\t                    \t</form>\r\n\t                    </div>\r\n\t                </div>\r\n\t            </div>\r\n\r\n\t            <div class=\"col m4\">\r\n\t            \t<div class=\"card\" style=\"padding: 20px;\">\r\n\t            \t\t<div class=\"card-body\">\r\n\t            \t\t\t<div class=\"table-responsive\">\r\n\t\t                        <table class=\"table align-items-center justify-content-center mb-0\" id=\"products-table\">\r\n\t\t                            <thead>\r\n\t\t                                <tr>\r\n\t\t                                    <th>Name</th>\r\n\t\t                                    <th>Price</th>\r\n\t\t                                    <th>Total</th>\r\n\t\t                                </tr>\r\n\t\t                            </thead>\r\n\r\n\t\t                            <tbody>\r\n\t\t                                <tr v-for=\"(product, index) in products\" v-bind:key=\"product._id\">\r\n\t\t                                \t<td v-text=\"product.name\"></td>\r\n\t\t                                \t<td v-text=\"'$' + product.price + ' x ' + product.units\"></td>\r\n\t\t                                \t<td v-text=\"'$' + (product.price * product.units)\"></td>\r\n\t\t                                </tr>\r\n\t\t                            </tbody>\r\n\r\n\t\t                            <tfoot>\r\n\r\n\t\t                            \t<tr>\r\n\t\t                            \t\t<td colspan=\"4\" style=\"text-align: right;\">\r\n\t\t                            \t\t\t<div style=\"margin-right: 20px;\">\r\n\t\t                            \t\t\t\t<b>Total: </b>\r\n\t\t                            \t\t\t\t$<span v-text=\"total\"></span>\r\n\t\t                            \t\t\t</div>\r\n\t\t                            \t\t</td>\r\n\t\t                            \t</tr>\r\n\t\t                            </tfoot>\r\n\t\t                        </table>\r\n\t\t                    </div>\r\n\t            \t\t</div>\r\n\r\n\t            \t\t<div class=\"card-footer\" v-if=\"!cartEmpty\">\r\n\t            \t\t\t<div class=\"row\">\r\n\t            \t\t\t\t<div class=\"col offset-m6 m6\">\r\n\t\t\t            \t\t\t<button type=\"button\" class=\"waves-effect waves-light btn offset-m2\" v-on:click=\"cashOnDelivery\" style=\"margin-top: 20px;\" v-bind:disabled=\"paymentLoading\">Order now</button>\r\n\t\t\t            \t\t</div>\r\n\t\t\t            \t</div>\r\n\t            \t\t</div>\r\n\t            \t</div>\r\n\t            </div>\r\n\t        </div>\r\n\t    </div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\r\n\timport axios from \"axios\"\r\n\timport swal from \"sweetalert2\"\r\n\timport store from \"../vuex/store\"\r\n\r\n    export default {\r\n    \tdata() {\r\n    \t\treturn {\r\n    \t\t\temail: \"\",\r\n    \t\t\tname: \"\",\r\n    \t\t\tmobile: \"\",\r\n    \t\t\taddress: \"\",\r\n    \t\t\tcountry: \"\",\r\n    \t\t\tpaymentLoading: false,\r\n    \t\t\tpaymentStatus: \"\",\r\n    \t\t\tcartEmpty: false,\r\n    \t\t\ttotal: 0,\r\n    \t\t\tproducts: []\r\n    \t\t}\r\n    \t},\r\n\r\n    \tmethods: {\r\n    \t\tcashOnDelivery: function () {\r\n    \t\t\tconst self = this\r\n\r\n    \t\t\tif (this.name == \"\" || this.email == \"\" || this.mobile == \"\"\r\n    \t\t\t\t|| this.country == \"\" || this.address == \"\") {\r\n    \t\t\t\tswal.fire(\"Error\", \"Please fill all fields.\", \"error\")\r\n    \t\t\t\treturn\r\n    \t\t\t}\r\n\r\n    \t\t\tswal.fire({\r\n\t\t\t\t\ttitle: 'Cash on delivery',\r\n\t\t\t\t\ttext: \"I want to process my order on cash on delivery.\",\r\n\t\t\t\t\ticon: 'warning',\r\n\t\t\t\t\tshowCancelButton: true,\r\n\t\t\t\t\tconfirmButtonColor: '#3085d6',\r\n\t\t\t\t\tcancelButtonColor: '#d33',\r\n\t\t\t\t\tconfirmButtonText: 'Yes'\r\n\t\t\t\t})\r\n    \t\t\t.then(async function (result) {\r\n\t\t\t\t\tif (result.isConfirmed) {\r\n\t\t\t\t\t\tlet products = []\r\n\t\t    \t\t\tconst cookieParts = document.cookie.split(\"; \")\r\n\t\t    \t\t\tfor (let a = 0; a < cookieParts.length; a++) {\r\n\t\t\t\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\r\n\t\t\t\t\t\t\tif (keyValue[0] == \"products\") {\r\n\t\t\t\t\t\t\t\tproducts = keyValue[1]\r\n\t\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t    \t\t\tself.paymentLoading = true\r\n\t\t                self.paymentStatus = \"Processing your order...\"\r\n\r\n\t\t                const formData = new FormData()\r\n\t\t                formData.append(\"products\", products)\r\n\t\t                formData.append(\"name\", self.name)\r\n\t\t                formData.append(\"email\", self.email)\r\n\t\t                formData.append(\"mobile\", self.mobile)\r\n\t\t                formData.append(\"country\", self.country)\r\n\t\t                formData.append(\"address\", self.address)\r\n\r\n\t\t                const response = await axios.post(\r\n\t\t                    self.$apiURL + \"/cashOnDelivery\",\r\n\t\t                    formData\r\n\t\t                )\r\n\r\n\t\t                self.paymentLoading = false\r\n\t\t                self.paymentStatus = \"\"\r\n\r\n\t\t                if (response.data.status == \"success\") {\r\n\t\t                \tswal.fire(\"Success\", response.data.message, \"success\")\r\n\t\t                \tdocument.cookie = \"products=\" + JSON.stringify([])\r\n\t\t                \tstore.commit(\"setCartCounter\", 0)\r\n\t\t                \tself.cartEmpty = true\r\n\t\t                } else {\r\n\t\t                    swal.fire(\"Error\", response.data.message, \"error\")\r\n\t\t                }\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n    \t\t}\r\n    \t},\r\n\r\n    \tmounted: async function () {\r\n    \t\tconst self = this\r\n    \t\tconst cookieParts = document.cookie.split(\"; \")\r\n\t\t\tthis.total = 0\r\n\t\t\tfor (let a = 0; a < cookieParts.length; a++) {\r\n\t\t\t\tconst keyValue = cookieParts[a].split(\"=\")\r\n\t\t\t\tif (keyValue[0] == \"products\") {\r\n\t\t\t\t\tconst products = JSON.parse(keyValue[1])\r\n\t\t\t\t\tthis.products = products\r\n\t\t\t\t\tfor (let a = 0; a < products.length; a++) {\r\n\t        \t\t\tthis.total += (products[a].units * products[a].price)\r\n\t        \t\t}\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst response = await axios.post(\r\n                this.$apiURL + \"/getConfigurations\",\r\n                null\r\n            )\r\n\r\n            if (response.data.status == \"success\") {\r\n                let configurations = response.data.configurations\r\n                if (configurations != null) {\r\n                    const user = store.getters.getUser\r\n                    if (user != null) {\r\n                    \tthis.name = user.name\r\n                    \tthis.email = user.email\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.cartEmpty = (this.total == 0)\r\n    \t}\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}