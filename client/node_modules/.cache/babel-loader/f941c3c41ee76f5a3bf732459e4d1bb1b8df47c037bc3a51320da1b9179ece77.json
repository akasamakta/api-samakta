{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport store from \"../vuex/store\";\nexport default {\n  data() {\n    return {\n      \"isLoading\": false\n    };\n  },\n  methods: {\n    doLogin: async function () {\n      const form = event.target;\n      const formData = new FormData(form);\n      this.isLoading = true;\n      const response = await axios.post(this.$apiURL + \"/login\", formData);\n      this.isLoading = false;\n      swal.fire(\"Login\", response.data.message, response.data.status);\n      if (response.data.status == \"success\") {\n        form.reset();\n\n        // get access token from server\n        const accessToken = response.data.accessToken;\n        // save in local storage\n        localStorage.setItem(this.$accessTokenKey, accessToken);\n        this.$headers = {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        };\n        store.commit(\"setLogin\", true);\n        store.commit(\"setUser\", response.data.user);\n        setTimeout(function () {\n          var elems = document.querySelectorAll('.dropdown-trigger');\n          var instances = M.Dropdown.init(elems, {});\n        }, 500);\n        this.$router.push(\"/\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAgCI,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,IAAG,MAAO,aAAY;AAC7B,OAAOC,KAAI,MAAO,eAAc;AAEhC,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACH,WAAW,EAAE;IACjB;EACJ,CAAC;EAEDC,OAAO,EAAE;IACLC,OAAO,EAAE,kBAAkB;MACvB,MAAMC,IAAG,GAAIC,KAAK,CAACC,MAAK;MACxB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAACJ,IAAI;MAElC,IAAI,CAACK,SAAQ,GAAI,IAAG;MAEpB,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,QAAQ,EACvBL,QAAO,CACX;MAEA,IAAI,CAACE,SAAQ,GAAI,KAAI;MACrBV,IAAI,CAACc,IAAI,CAAC,OAAO,EAAEH,QAAQ,CAACT,IAAI,CAACa,OAAO,EAAEJ,QAAQ,CAACT,IAAI,CAACc,MAAM;MAE9D,IAAIL,QAAQ,CAACT,IAAI,CAACc,MAAK,IAAK,SAAS,EAAE;QACnCX,IAAI,CAACY,KAAK,EAAC;;QAEX;QACA,MAAMC,WAAU,GAAIP,QAAQ,CAACT,IAAI,CAACgB,WAAU;QAC5C;QACAC,YAAY,CAACC,OAAO,CAAC,IAAI,CAACC,eAAe,EAAEH,WAAW;QAEtD,IAAI,CAACI,QAAO,GAAI;UACZ,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,SAAQ,GAAIJ;QACjC;QAEAjB,KAAK,CAACsB,MAAM,CAAC,UAAU,EAAE,IAAI;QAC7BtB,KAAK,CAACsB,MAAM,CAAC,SAAS,EAAEZ,QAAQ,CAACT,IAAI,CAACsB,IAAI;QAE1CC,UAAU,CAAC,YAAY;UACrB,IAAIC,KAAI,GAAIC,QAAQ,CAACC,gBAAgB,CAAC,mBAAmB;UACzD,IAAIC,SAAQ,GAAIC,CAAC,CAACC,QAAQ,CAACC,IAAI,CAACN,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,EAAE,GAAG;QAEN,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC,GAAG;MACzB;IACJ;EACJ;AACJ","names":["axios","swal","store","data","methods","doLogin","form","event","target","formData","FormData","isLoading","response","post","$apiURL","fire","message","status","reset","accessToken","localStorage","setItem","$accessTokenKey","$headers","commit","user","setTimeout","elems","document","querySelectorAll","instances","M","Dropdown","init","$router","push"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/client/src/components/LoginComponent.vue"],"sourcesContent":["<template>\n    <div class=\"section no-pad-bot\" id=\"index-banner\">\n        <div class=\"container\" style=\"margin-bottom: 50px;\">\n            <div class=\"row\">\n                <div class=\"col offset-m3 m6\">\n                    <h1 class=\"text-center\" style=\"margin-bottom: 50px; text-align: center;\">Login</h1>\n\n                    <form method=\"POST\" v-on:submit.prevent=\"doLogin\">\n                        <div class=\"form-group\">\n                            <label class=\"text-white\">Enter email</label>\n                            <input type=\"email\" class=\"form-control\" name=\"email\" autocomplete=\"off\" />\n                        </div>\n\n                        <br />\n\n                        <div class=\"form-group\">\n                            <label class=\"text-white\">Enter password</label>\n                            <input type=\"password\" class=\"form-control\" name=\"password\" autocomplete=\"off\" />\n                        </div>\n\n                        <br />\n\n                        <input type=\"submit\" value=\"Login\" v-bind:disabled=\"isLoading\" name=\"submit\" class=\"btn btn-primary\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n    import store from \"../vuex/store\"\n\n    export default {\n        data() {\n            return {\n                \"isLoading\": false\n            }\n        },\n\n        methods: {\n            doLogin: async function () {\n                const form = event.target\n                const formData = new FormData(form)\n\n                this.isLoading = true\n\n                const response = await axios.post(\n                    this.$apiURL + \"/login\",\n                    formData\n                )\n                \n                this.isLoading = false\n                swal.fire(\"Login\", response.data.message, response.data.status)\n\n                if (response.data.status == \"success\") {\n                    form.reset()\n\n                    // get access token from server\n                    const accessToken = response.data.accessToken\n                    // save in local storage\n                    localStorage.setItem(this.$accessTokenKey, accessToken)\n\n                    this.$headers = {\n                        'Content-Type': 'application/json',\n                        'Authorization': 'Bearer ' + accessToken\n                    }\n\n                    store.commit(\"setLogin\", true)\n                    store.commit(\"setUser\", response.data.user)\n\n                    setTimeout(function () {\n                      var elems = document.querySelectorAll('.dropdown-trigger')\n                      var instances = M.Dropdown.init(elems, {})\n                    }, 500)\n\n                    this.$router.push(\"/\")\n                }\n            }\n        }\n    }\n</script>\n\n<style>\n    label {\n        font-size: initial;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}