{"ast":null,"code":"import { createApp } from 'vue';\nimport App from './App.vue';\nimport { createRouter, createWebHistory } from \"vue-router\";\nimport AddProduct from \"./components/AddProduct.vue\";\nimport AllProducts from \"./components/AllProducts.vue\";\nimport AllOrders from \"./components/AllOrders.vue\";\nimport OrderDetail from \"./components/OrderDetail.vue\";\nimport LoginComponent from \"./components/LoginComponent.vue\";\nimport DashboardComponent from \"./components/DashboardComponent.vue\";\nimport EditProduct from \"./components/EditProduct.vue\";\nconst routes = [{\n  path: \"/\",\n  component: DashboardComponent\n}, {\n  path: \"/login\",\n  component: LoginComponent\n}, {\n  path: \"/orderDetail/:_id\",\n  component: OrderDetail\n}, {\n  path: \"/allOrders\",\n  component: AllOrders\n}, {\n  path: \"/allProducts\",\n  component: AllProducts\n}, {\n  path: \"/product/edit/:_id\",\n  component: EditProduct\n}, {\n  path: \"/addProduct\",\n  component: AddProduct\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nconst app = createApp(App);\napp.config.globalProperties.$clientURL = \"http://localhost:8080\";\napp.config.globalProperties.$mainURL = \"http://localhost:8081\";\napp.config.globalProperties.$apiURL = \"http://localhost:3000\";\napp.config.globalProperties.$accessTokenKey = \"accessTokenKey\";\napp.config.globalProperties.$months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\napp.config.globalProperties.$user = null;\napp.config.globalProperties.$login = false;\napp.config.globalProperties.$headers = {\n  'Content-Type': 'application/json',\n  'Authorization': 'Bearer ' + localStorage.getItem(\"accessTokenKey\")\n};\napp.use(router);\napp.mount('#app');","map":{"version":3,"names":["createApp","App","createRouter","createWebHistory","AddProduct","AllProducts","AllOrders","OrderDetail","LoginComponent","DashboardComponent","EditProduct","routes","path","component","router","history","app","config","globalProperties","$clientURL","$mainURL","$apiURL","$accessTokenKey","$months","$user","$login","$headers","localStorage","getItem","use","mount"],"sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/admin/src/main.js"],"sourcesContent":["import { createApp } from 'vue'\nimport App from './App.vue'\n\nimport { createRouter, createWebHistory } from \"vue-router\"\n\nimport AddProduct from \"./components/AddProduct.vue\"\nimport AllProducts from \"./components/AllProducts.vue\"\nimport AllOrders from \"./components/AllOrders.vue\"\nimport OrderDetail from \"./components/OrderDetail.vue\"\nimport LoginComponent from \"./components/LoginComponent.vue\"\nimport DashboardComponent from \"./components/DashboardComponent.vue\"\nimport EditProduct from \"./components/EditProduct.vue\"\n\nconst routes = [\n\t{ path: \"/\", component: DashboardComponent },\n\t{ path: \"/login\", component: LoginComponent },\n\t{ path: \"/orderDetail/:_id\", component: OrderDetail },\n\t{ path: \"/allOrders\", component: AllOrders },\n\t{ path: \"/allProducts\", component: AllProducts },\n\t{ path: \"/product/edit/:_id\", component: EditProduct },\n\t{ path: \"/addProduct\", component: AddProduct }\n]\nconst router = createRouter({\n\thistory: createWebHistory(),\n\troutes\n})\n\nconst app = createApp(App)\n\napp.config.globalProperties.$clientURL = \"http://localhost:8080\"\napp.config.globalProperties.$mainURL = \"http://localhost:8081\"\napp.config.globalProperties.$apiURL = \"http://localhost:3000\"\napp.config.globalProperties.$accessTokenKey = \"accessTokenKey\"\napp.config.globalProperties.$months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n\napp.config.globalProperties.$user = null\napp.config.globalProperties.$login = false\n\napp.config.globalProperties.$headers = {\n\t'Content-Type': 'application/json',\n\t'Authorization': 'Bearer ' + localStorage.getItem(\"accessTokenKey\")\n}\n\napp.use(router)\napp.mount('#app')\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAE3B,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAE3D,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,kBAAkB,MAAM,qCAAqC;AACpE,OAAOC,WAAW,MAAM,8BAA8B;AAEtD,MAAMC,MAAM,GAAG,CACd;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEJ;AAAmB,CAAC,EAC5C;EAAEG,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEL;AAAe,CAAC,EAC7C;EAAEI,IAAI,EAAE,mBAAmB;EAAEC,SAAS,EAAEN;AAAY,CAAC,EACrD;EAAEK,IAAI,EAAE,YAAY;EAAEC,SAAS,EAAEP;AAAU,CAAC,EAC5C;EAAEM,IAAI,EAAE,cAAc;EAAEC,SAAS,EAAER;AAAY,CAAC,EAChD;EAAEO,IAAI,EAAE,oBAAoB;EAAEC,SAAS,EAAEH;AAAY,CAAC,EACtD;EAAEE,IAAI,EAAE,aAAa;EAAEC,SAAS,EAAET;AAAW,CAAC,CAC9C;AACD,MAAMU,MAAM,GAAGZ,YAAY,CAAC;EAC3Ba,OAAO,EAAEZ,gBAAgB,EAAE;EAC3BQ;AACD,CAAC,CAAC;AAEF,MAAMK,GAAG,GAAGhB,SAAS,CAACC,GAAG,CAAC;AAE1Be,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACC,UAAU,GAAG,uBAAuB;AAChEH,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACE,QAAQ,GAAG,uBAAuB;AAC9DJ,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACG,OAAO,GAAG,uBAAuB;AAC7DL,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACI,eAAe,GAAG,gBAAgB;AAC9DN,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACK,OAAO,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;AAEhKP,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACM,KAAK,GAAG,IAAI;AACxCR,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACO,MAAM,GAAG,KAAK;AAE1CT,GAAG,CAACC,MAAM,CAACC,gBAAgB,CAACQ,QAAQ,GAAG;EACtC,cAAc,EAAE,kBAAkB;EAClC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB;AACnE,CAAC;AAEDZ,GAAG,CAACa,GAAG,CAACf,MAAM,CAAC;AACfE,GAAG,CAACc,KAAK,CAAC,MAAM,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}