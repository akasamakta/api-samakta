{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nexport default {\n  data() {\n    return {\n      configurations: null\n    };\n  },\n  methods: {\n    saveConfigurations: async function () {\n      const form = event.target;\n      const formData = new FormData(form);\n      const response = await axios.post(this.$apiURL + \"/admin/saveConfigurations\", formData, {\n        headers: this.$headers\n      });\n      swal.fire(\"Configurations\", response.data.message, response.data.status);\n    }\n  },\n  mounted: async function () {\n    const response = await axios.post(this.$apiURL + \"/getConfigurations\", null);\n    if (response.data.status == \"success\") {\n      this.configurations = response.data.configurations;\n    }\n  }\n};","map":{"version":3,"mappings":"AA8BI,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,IAAG,MAAO,aAAY;AAE7B,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,cAAc,EAAE;IACpB;EACJ,CAAC;EAEDC,OAAO,EAAE;IAELC,kBAAkB,EAAE,kBAAkB;MAClC,MAAMC,IAAG,GAAIC,KAAK,CAACC,MAAK;MACxB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAACJ,IAAI;MAElC,MAAMK,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,2BAA2B,EAC1CJ,QAAQ,EACR;QACIK,OAAO,EAAE,IAAI,CAACC;MAClB,EACJ;MAEAd,IAAI,CAACe,IAAI,CAAC,gBAAgB,EAAEL,QAAQ,CAACT,IAAI,CAACe,OAAO,EAAEN,QAAQ,CAACT,IAAI,CAACgB,MAAM;IAC3E;EACJ,CAAC;EAEDC,OAAO,EAAE,kBAAkB;IACvB,MAAMR,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,oBAAoB,EACnC,IAAG,CACP;IAEA,IAAIF,QAAQ,CAACT,IAAI,CAACgB,MAAK,IAAK,SAAS,EAAE;MACnC,IAAI,CAACf,cAAa,GAAIQ,QAAQ,CAACT,IAAI,CAACC,cAAa;IACrD;EACJ;AACJ","names":["axios","swal","data","configurations","methods","saveConfigurations","form","event","target","formData","FormData","response","post","$apiURL","headers","$headers","fire","message","status","mounted"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/admin/src/components/DashboardComponent.vue"],"sourcesContent":["<template>\n    <!-- End Navbar -->\n    <div class=\"container-fluid py-4\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <h4 class=\"font-weight-bolder\">Configurations</h4>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <form v-on:submit.prevent=\"saveConfigurations\">\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Admin email</label>\n                                <input type=\"email\" class=\"form-control\" name=\"adminEmail\" v-bind:value=\"configurations == null ? '' : configurations.adminEmail\" />\n                            </div>\n\n                            <div class=\"text-center\">\n                                <button type=\"submit\" class=\"btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0\">Save</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n\n    export default {\n        data() {\n            return {\n                configurations: null\n            }\n        },\n\n        methods: {\n\n            saveConfigurations: async function () {\n                const form = event.target\n                const formData = new FormData(form)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/admin/saveConfigurations\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                swal.fire(\"Configurations\", response.data.message, response.data.status)\n            }\n        },\n\n        mounted: async function () {\n            const response = await axios.post(\n                this.$apiURL + \"/getConfigurations\",\n                null\n            )\n\n            if (response.data.status == \"success\") {\n                this.configurations = response.data.configurations\n            }\n        }\n    }\n</script>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}