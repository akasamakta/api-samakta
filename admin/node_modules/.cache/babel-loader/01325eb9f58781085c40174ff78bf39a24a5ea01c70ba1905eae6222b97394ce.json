{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid py-4\"\n};\nconst _hoisted_2 = {\n  class: \"row\"\n};\nconst _hoisted_3 = {\n  class: \"col-md-12\"\n};\nconst _hoisted_4 = {\n  class: \"card\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-header\"\n}, [/*#__PURE__*/_createElementVNode(\"h4\", {\n  class: \"font-weight-bolder\"\n}, \"All orders\")], -1 /* HOISTED */);\nconst _hoisted_6 = {\n  class: \"card-body\"\n};\nconst _hoisted_7 = {\n  class: \"input-group input-group-outline mb-3\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form-label no-left-margin\"\n}, \"Search\", -1 /* HOISTED */);\nconst _hoisted_9 = {\n  class: \"table-responsive p-0\"\n};\nconst _hoisted_10 = {\n  class: \"table align-items-center justify-content-center mb-0\",\n  id: \"table\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"User\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"Address\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"Total\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"Order\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  class: \"text-uppercase text-secondary opacity-7\"\n}, \"Actions\")])], -1 /* HOISTED */);\nconst _hoisted_12 = [\"textContent\"];\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_14 = [\"textContent\"];\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_16 = [\"textContent\"];\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_18 = [\"textContent\"];\nconst _hoisted_19 = [\"textContent\"];\nconst _hoisted_20 = [\"textContent\"];\nconst _hoisted_21 = {\n  key: 0,\n  style: {\n    \"color\": \"black\"\n  }\n};\nconst _hoisted_22 = [\"textContent\"];\nconst _hoisted_23 = [\"value\"];\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"input\", {\n  type: \"submit\",\n  name: \"submit\",\n  value: \"Mark as complete\",\n  class: \"btn bg-gradient-primary\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_25 = {\n  class: \"card-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" End Navbar \"), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.search = $event),\n    autocomplete: \"off\",\n    class: \"form-control\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.search]])]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"table\", _hoisted_10, [_hoisted_11, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order._id.toString()\n    }, [_createElementVNode(\"td\", null, [order.paidVia == 'COD' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"span\", {\n      textContent: _toDisplayString(order.name)\n    }, null, 8 /* PROPS */, _hoisted_12), _createTextVNode(), _hoisted_13, _createElementVNode(\"span\", {\n      textContent: _toDisplayString(order.email)\n    }, null, 8 /* PROPS */, _hoisted_14), _createTextVNode(), _hoisted_15, _createElementVNode(\"span\", {\n      textContent: _toDisplayString(order.mobile)\n    }, null, 8 /* PROPS */, _hoisted_16), _createTextVNode(), _hoisted_17, _createElementVNode(\"span\", {\n      textContent: _toDisplayString(order.country)\n    }, null, 8 /* PROPS */, _hoisted_18)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [order.paidVia == 'COD' ? (_openBlock(), _createElementBlock(\"span\", {\n      key: 0,\n      textContent: _toDisplayString(order.address)\n    }, null, 8 /* PROPS */, _hoisted_19)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [_createTextVNode(\" $\"), _createElementVNode(\"span\", {\n      textContent: _toDisplayString($options.getTotal(order.cart, order.shippingCharges || 0))\n    }, null, 8 /* PROPS */, _hoisted_20)]), _createElementVNode(\"td\", null, [order.paidVia == 'COD' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_21, \"Cash on delivery\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"td\", null, [_createElementVNode(\"span\", {\n      textContent: _toDisplayString(order.status)\n    }, null, 8 /* PROPS */, _hoisted_22)]), _createElementVNode(\"td\", null, [_createVNode(_component_router_link, {\n      to: '/orderDetail/' + order._id,\n      class: \"text-secondary\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Detail \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), typeof order.status == 'undefined' || order.status == 'Processing' ? (_openBlock(), _createElementBlock(\"form\", {\n      key: 0,\n      onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.markAsCompleted && $options.markAsCompleted(...args), [\"prevent\"]))\n    }, [_createElementVNode(\"input\", {\n      type: \"hidden\",\n      name: \"_id\",\n      value: order._id,\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_23), _hoisted_24], 32 /* HYDRATE_EVENTS */)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]), _createElementVNode(\"div\", _hoisted_25, [_createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.loadMore && $options.loadMore(...args)),\n    class: \"btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0\",\n    ref: \"btnLoadMore\"\n  }, \"Load more\", 512 /* NEED_PATCH */)])])])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","id","style","type","name","value","_createCommentVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","$data","autocomplete","required","_hoisted_9","_hoisted_10","_hoisted_11","_createElementBlock","_Fragment","order","key","_id","toString","paidVia","_toDisplayString","_hoisted_13","email","_hoisted_15","mobile","_hoisted_17","country","address","$options","cart","shippingCharges","_hoisted_21","status","_createVNode","_component_router_link","to","onSubmit","_hoisted_24","_hoisted_25","onClick","ref"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/admin/src/components/AllOrders.vue"],"sourcesContent":["<template>\n    <!-- End Navbar -->\n    <div class=\"container-fluid py-4\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <h4 class=\"font-weight-bolder\">All orders</h4>\n                    </div>\n\n                    <div class=\"card-body\">\n\n                        <div class=\"input-group input-group-outline mb-3\">\n                            <label class=\"form-label no-left-margin\">Search</label>\n                            <input type=\"text\" v-model=\"search\" autocomplete=\"off\" class=\"form-control\" required />\n                        </div>\n\n                        <div class=\"table-responsive p-0\">\n                            <table class=\"table align-items-center justify-content-center mb-0\" id=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">User</th>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">Address</th>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">Total</th>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">Order</th>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">Status</th>\n                                        <th class=\"text-uppercase text-secondary opacity-7\">Actions</th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    <tr v-for=\"(order) in orders\" v-bind:key=\"order._id.toString()\">\n                                        <td>\n                                            <template v-if=\"order.paidVia == 'COD'\">\n                                                <span v-text=\"order.name\"></span> <br />\n                                                <span v-text=\"order.email\"></span> <br />\n                                                <span v-text=\"order.mobile\"></span> <br />\n                                                <span v-text=\"order.country\"></span>\n                                            </template>\n                                        </td>\n\n                                        <td>\n                                            <span v-if=\"order.paidVia == 'COD'\" v-text=\"order.address\"></span>\n                                        </td>\n\n                                        <td>\n                                            $<span v-text=\"getTotal(order.cart, order.shippingCharges || 0)\"></span>\n                                        </td>\n\n                                        <td>\n                                            <span v-if=\"order.paidVia == 'COD'\" style=\"color: black;\">Cash on delivery</span>\n                                        </td>\n\n                                        <td>\n                                            <span v-text=\"order.status\"></span>\n                                        </td>\n\n                                        <td>\n                                            <router-link v-bind:to=\"'/orderDetail/' + order._id\" class=\"text-secondary\">\n                                                Detail\n                                            </router-link>\n\n                                            <form v-if=\"typeof order.status == 'undefined' || order.status == 'Processing'\" v-on:submit.prevent=\"markAsCompleted\">\n                                                <input type=\"hidden\" name=\"_id\" v-bind:value=\"order._id\" required />\n\n                                                <input type=\"submit\" name=\"submit\" value=\"Mark as complete\" class=\"btn bg-gradient-primary\" />\n                                            </form>\n                                        </td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    <div class=\"card-footer\">\n                        <button type=\"button\" v-on:click=\"loadMore\" class=\"btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0\" ref=\"btnLoadMore\">Load more</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n    import store from \"../vuex/store\"\n\n    export default {\n        data() {\n            return {\n                page: 1,\n                orders: [],\n                originalOrders: [],\n                search: \"\"\n            }\n        },\n\n        methods: {\n\n            markAsCompleted: function () {\n                const form = event.target\n                const self = this\n\n                swal.fire({\n                    title: 'Are you sure ?',\n                    text: \"Do you want to mark this order as completed ?\",\n                    icon: 'warning',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Yes'\n                }).then(async function (result) {\n                    if (result.isConfirmed) {\n                        form.submit.setAttribute(\"disabled\", \"disabled\")\n\n                        const formData = new FormData(form)\n                        const response = await axios.post(\n                            self.$apiURL + \"/admin/orders/markAsCompleted\",\n                            formData,\n                            {\n                                headers: self.$headers\n                            }\n                        )\n\n                        if (response.data.status == \"success\") {\n                            for (let a = 0; a < self.orders.length; a++) {\n                                if (self.orders[a]._id == form._id.value) {\n                                    self.orders[a].status = \"Completed\"\n                                    break\n                                }\n                            }\n\n                            form.submit.removeAttribute(\"disabled\")\n                            self.originalOrders = self.orders\n                        } else {\n                            swal.fire(\"Error\", response.data.message, \"error\")\n                        }\n                    }\n                })\n            },\n\n            getTotal: function (items, shippingCharges) {\n                let total = 0\n                for (let a = 0; a < items.length; a++) {\n                    total += (parseInt(items[a].price) * items[a].units)\n                }\n                total += shippingCharges\n                return total\n            },\n\n            loadMore: async function () {\n                this.$refs.btnLoadMore.setAttribute(\"disabled\", \"disabled\")\n\n                this.page++\n                this.getOrders()\n            },\n\n            getOrders: async function () {\n                const formData = new FormData()\n                formData.append(\"page\", this.page)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/admin/orders/fetch\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                this.$refs.btnLoadMore.removeAttribute(\"disabled\")\n\n                if (response.data.status == \"success\") {\n                    if (response.data.orders.length > 0) {\n                        this.orders = response.data.orders\n                        this.originalOrders = this.orders\n                    }\n                    store.commit(\"setUnReadOrderNotifications\", 0)\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            }\n        },\n\n        mounted: function () {\n            this.getOrders()\n        },\n\n        watch: {\n            search: async function (to, from) {\n                if (this.search.length < 2) {\n                    this.orders = this.originalOrders\n                    return\n                }\n\n                const formData = new FormData()\n                formData.append(\"search\", this.search)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/admin/orders/search\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    this.orders = response.data.orders\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n            }\n        }\n    }\n</script>\n\n<style>\n    #table th,\n    #table td {\n        padding-left: 0px !important;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}