{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"../../../public/assets/css/nucleo-icons.css\";\nimport \"../../../public/assets/css/nucleo-svg.css\";\nimport \"../../../public/assets/css/font-awesome.min.css\";\nimport axios from \"axios\";\nimport store from \"../../vuex/store\";\nimport { io } from \"socket.io-client\";\nexport default {\n  methods: {\n    doLogout: async function () {\n      const response = await axios.post(this.$apiURL + \"/admin/logout\", null, {\n        headers: this.$headers\n      });\n      localStorage.removeItem(this.$accessTokenKey);\n      store.commit(\"setAdmin\", null);\n      store.commit(\"setLogin\", false);\n      this.$router.push({\n        path: \"/login\"\n      });\n    },\n    getAdmin: async function () {\n      const self = this;\n      // check if admin is logged in\n      if (localStorage.getItem(this.$accessTokenKey)) {\n        const response = await axios.post(this.$apiURL + \"/admin/fetch\", null, {\n          headers: this.$headers\n        });\n        if (response.data.status == \"success\") {\n          // admin is logged in\n          store.commit(\"setAdmin\", response.data.admin);\n          store.commit(\"setLogin\", true);\n          store.commit(\"setUnReadOrderNotifications\", response.data.unReadOrderNotifications);\n          if (typeof global.socketIO !== \"undefined\") {\n            global.socketIO.emit(\"connected\", response.data.admin.email);\n            global.socketIO.on(\"newOrder\", function () {\n              let tempUnReadOrderNotifications = store.getters.getUnReadOrderNotifications;\n              tempUnReadOrderNotifications++;\n              store.commit(\"setUnReadOrderNotifications\", tempUnReadOrderNotifications);\n            });\n          }\n        } else {\n          // admin is logged out\n          localStorage.removeItem(this.$accessTokenKey);\n          store.commit(\"setLogin\", false);\n          this.$router.push({\n            path: \"/login\"\n          });\n        }\n      } else {\n        store.commit(\"setLogin\", false);\n        this.$router.push({\n          path: \"/login\"\n        });\n      }\n    }\n  },\n  computed: {\n    admin() {\n      return store.getters.getAdmin;\n    },\n    login() {\n      return store.getters.getLogin;\n    },\n    unReadOrderNotifications() {\n      return store.getters.getUnReadOrderNotifications;\n    }\n  },\n  mounted: function () {\n    this.getAdmin();\n    global.socketIO = io(this.$apiURL);\n  }\n};","map":{"version":3,"mappings":";AA8EC,OAAO,6CAA4C;AACnD,OAAO,2CAA0C;AACjD,OAAO,iDAAgD;AAEtD,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,KAAI,MAAO,kBAAiB;AACnC,SAASC,EAAC,QAAS,kBAAiB;AAErC,eAAe;EAEZC,OAAO,EAAE;IAEPC,QAAQ,EAAE,kBAAkB;MAC1B,MAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,IAAI,CAC/B,IAAI,CAACC,OAAM,GAAI,eAAe,EAC9B,IAAI,EACJ;QACEC,OAAO,EAAE,IAAI,CAACC;MAChB,EACF;MAEAC,YAAY,CAACC,UAAU,CAAC,IAAI,CAACC,eAAe;MAC5CX,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE,IAAI;MAC7BZ,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE,KAAK;MAE9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QACdC,IAAI,EAAE;MACV,CAAC;IACH,CAAC;IAEDC,QAAQ,EAAE,kBAAkB;MAC1B,MAAMC,IAAG,GAAI,IAAG;MAChB;MACA,IAAIR,YAAY,CAACS,OAAO,CAAC,IAAI,CAACP,eAAe,CAAC,EAAE;QAC9C,MAAMP,QAAO,GAAI,MAAML,KAAK,CAACM,IAAI,CAC/B,IAAI,CAACC,OAAM,GAAI,cAAc,EAC7B,IAAI,EACJ;UACEC,OAAO,EAAE,IAAI,CAACC;QAChB,EACF;QAEA,IAAIJ,QAAQ,CAACe,IAAI,CAACC,MAAK,IAAK,SAAS,EAAE;UACrC;UACApB,KAAK,CAACY,MAAM,CAAC,UAAU,EAAER,QAAQ,CAACe,IAAI,CAACE,KAAK;UAC5CrB,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE,IAAI;UAC7BZ,KAAK,CAACY,MAAM,CAAC,6BAA6B,EAAER,QAAQ,CAACe,IAAI,CAACG,wBAAwB;UAElF,IAAI,OAAOC,MAAM,CAACC,QAAO,KAAM,WAAW,EAAE;YAC1CD,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAC,WAAW,EAAErB,QAAQ,CAACe,IAAI,CAACE,KAAK,CAACK,KAAK;YAE3DH,MAAM,CAACC,QAAQ,CAACG,EAAE,CAAC,UAAU,EAAE,YAAY;cACzC,IAAIC,4BAA2B,GAAI5B,KAAK,CAAC6B,OAAO,CAACC,2BAA0B;cAC3EF,4BAA4B,EAAC;cAC7B5B,KAAK,CAACY,MAAM,CAAC,6BAA6B,EAAEgB,4BAA4B;YAC1E,CAAC;UACH;QACF,OAAO;UACL;UACAnB,YAAY,CAACC,UAAU,CAAC,IAAI,CAACC,eAAe;UAC5CX,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE,KAAK;UAC9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAChBC,IAAI,EAAE;UACR,CAAC;QACH;MACF,OAAO;QACLf,KAAK,CAACY,MAAM,CAAC,UAAU,EAAE,KAAK;QAE9B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAChBC,IAAI,EAAE;QACR,CAAC;MACH;IACF;EACF,CAAC;EAEDgB,QAAQ,EAAE;IACRV,KAAK,GAAG;MACN,OAAOrB,KAAK,CAAC6B,OAAO,CAACb,QAAO;IAC9B,CAAC;IAEDgB,KAAK,GAAG;MACN,OAAOhC,KAAK,CAAC6B,OAAO,CAACI,QAAO;IAC9B,CAAC;IAEDX,wBAAuB,GAAK;MAC1B,OAAOtB,KAAK,CAAC6B,OAAO,CAACC,2BAA0B;IACjD;EACF,CAAC;EAEDI,OAAO,EAAE,YAAY;IACjB,IAAI,CAAClB,QAAQ,EAAC;IAEdO,MAAM,CAACC,QAAO,GAAIvB,EAAE,CAAC,IAAI,CAACK,OAAO;EACrC;AACH","names":["axios","store","io","methods","doLogout","response","post","$apiURL","headers","$headers","localStorage","removeItem","$accessTokenKey","commit","$router","push","path","getAdmin","self","getItem","data","status","admin","unReadOrderNotifications","global","socketIO","emit","email","on","tempUnReadOrderNotifications","getters","getUnReadOrderNotifications","computed","login","getLogin","mounted"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/admin/src/components/layouts/AppHeader.vue"],"sourcesContent":["<template>\r\n\t<aside class=\"sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 bg-gradient-dark\" id=\"sidenav-main\" v-if=\"login\">\r\n    <div class=\"sidenav-header\">\r\n      <i class=\"fas fa-times p-3 cursor-pointer text-white opacity-5 position-absolute end-0 top-0 d-none d-xl-none\" aria-hidden=\"true\" id=\"iconSidenav\"></i>\r\n      <a class=\"navbar-brand m-0\" href=\" https://demos.creative-tim.com/material-dashboard/pages/dashboard \" target=\"_blank\">\r\n        <img src=\"../../../public/assets/img/logo-ct.png\" class=\"navbar-brand-img h-100\" alt=\"main_logo\">\r\n        <span class=\"ms-1 font-weight-bold text-white\">Material Dashboard 2</span>\r\n      </a>\r\n    </div>\r\n    <hr class=\"horizontal light mt-0 mb-2\">\r\n    <div class=\"collapse navbar-collapse  w-auto\" id=\"sidenav-collapse-main\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <router-link v-bind:class=\"'nav-link text-white ' + ($route.path == '/' ? 'bg-gradient-primary active' : '')\" to=\"/\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">dashboard</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">Dashboard</span>\r\n          </router-link>\r\n        </li>\r\n        <li class=\"nav-item mt-3\">\r\n          <h6 class=\"ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8\">Products</h6>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link v-bind:class=\"'nav-link text-white ' + ($route.path == '/allProducts' ? 'bg-gradient-primary active' : '')\" to=\"/allProducts\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">list</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">All products</span>\r\n          </router-link>\r\n        </li>\r\n\r\n        <li class=\"nav-item\">\r\n          <router-link v-bind:class=\"'nav-link text-white ' + ($route.path == '/addProduct' ? 'bg-gradient-primary active' : '')\" to=\"/addProduct\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">add</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">Add new product</span>\r\n          </router-link>\r\n        </li>\r\n\r\n        <li class=\"nav-item mt-3\">\r\n          <h6 class=\"ps-4 ms-2 text-uppercase text-xs text-white font-weight-bolder opacity-8\">Orders</h6>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <router-link v-bind:class=\"'nav-link text-white ' + ($route.path == '/allOrders' ? 'bg-gradient-primary active' : '')\" to=\"/allOrders\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">list</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">All orders</span>\r\n            <span v-if=\"unReadOrderNotifications > 0\" v-text=\"'(' + unReadOrderNotifications + ')'\" style=\"margin-left: 10px;\"></span>\r\n          </router-link>\r\n        </li>\r\n\r\n        <li class=\"nav-item\" v-if=\"login\">\r\n          <a class=\"nav-link text-white \" href=\"javascript:void(0)\" v-on:click=\"doLogout\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">power_settings_new</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">Logout</span>\r\n          </a>\r\n        </li>\r\n\r\n        <li class=\"nav-item\" v-else>\r\n          <router-link class=\"nav-link text-white \" to=\"/login\">\r\n            <div class=\"text-white text-center me-2 d-flex align-items-center justify-content-center\">\r\n              <i class=\"material-icons opacity-10\">login</i>\r\n            </div>\r\n            <span class=\"nav-link-text ms-1\">Sign In</span>\r\n          </router-link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </aside>\r\n</template>\r\n\r\n<script>\r\n\r\n\timport \"../../../public/assets/css/nucleo-icons.css\"\r\n\timport \"../../../public/assets/css/nucleo-svg.css\"\r\n\timport \"../../../public/assets/css/font-awesome.min.css\"\r\n\r\n  import axios from \"axios\"\r\n  import store from \"../../vuex/store\"\r\n  import { io } from \"socket.io-client\"\r\n\r\n\texport default {\r\n\r\n    methods: {\r\n\r\n      doLogout: async function () {\r\n        const response = await axios.post(\r\n          this.$apiURL + \"/admin/logout\",\r\n          null,\r\n          {\r\n            headers: this.$headers\r\n          }\r\n        )\r\n\r\n        localStorage.removeItem(this.$accessTokenKey)\r\n        store.commit(\"setAdmin\", null)\r\n        store.commit(\"setLogin\", false)\r\n\r\n        this.$router.push({\r\n            path: \"/login\"\r\n        })\r\n      },\r\n\r\n      getAdmin: async function () {\r\n        const self = this\r\n        // check if admin is logged in\r\n        if (localStorage.getItem(this.$accessTokenKey)) {\r\n          const response = await axios.post(\r\n            this.$apiURL + \"/admin/fetch\",\r\n            null,\r\n            {\r\n              headers: this.$headers\r\n            }\r\n          )\r\n\r\n          if (response.data.status == \"success\") {\r\n            // admin is logged in\r\n            store.commit(\"setAdmin\", response.data.admin)\r\n            store.commit(\"setLogin\", true)\r\n            store.commit(\"setUnReadOrderNotifications\", response.data.unReadOrderNotifications)\r\n\r\n            if (typeof global.socketIO !== \"undefined\") {\r\n              global.socketIO.emit(\"connected\", response.data.admin.email)\r\n\r\n              global.socketIO.on(\"newOrder\", function () {\r\n                let tempUnReadOrderNotifications = store.getters.getUnReadOrderNotifications\r\n                tempUnReadOrderNotifications++\r\n                store.commit(\"setUnReadOrderNotifications\", tempUnReadOrderNotifications)\r\n              })\r\n            }\r\n          } else {\r\n            // admin is logged out\r\n            localStorage.removeItem(this.$accessTokenKey)\r\n            store.commit(\"setLogin\", false)\r\n            this.$router.push({\r\n              path: \"/login\"\r\n            })\r\n          }\r\n        } else {\r\n          store.commit(\"setLogin\", false)\r\n\r\n          this.$router.push({\r\n            path: \"/login\"\r\n          })\r\n        }\r\n      },\r\n    },\r\n\r\n    computed: {\r\n      admin() {\r\n        return store.getters.getAdmin\r\n      },\r\n\r\n      login() {\r\n        return store.getters.getLogin\r\n      },\r\n\r\n      unReadOrderNotifications () {\r\n        return store.getters.getUnReadOrderNotifications\r\n      }\r\n    },\r\n\r\n    mounted: function () {\r\n        this.getAdmin()\r\n\r\n        global.socketIO = io(this.$apiURL)\r\n    },\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t@import \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700,900|Roboto+Slab:400,700\"\r\n</style>\r\n\r\n<style>\r\n\t@import \"https://fonts.googleapis.com/icon?family=Material+Icons+Round\"\r\n</style>\r\n\r\n<style>\r\n\t.navbar-vertical.navbar-expand-xs .navbar-collapse {\r\n\t\theight: auto !important;\r\n\t}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}