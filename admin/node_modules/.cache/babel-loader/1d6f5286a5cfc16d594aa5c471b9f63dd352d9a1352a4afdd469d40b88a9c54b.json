{"ast":null,"code":"import axios from \"axios\";\nimport swal from \"sweetalert2\";\nexport default {\n  data() {\n    return {\n      _id: this.$route.params._id,\n      product: null\n    };\n  },\n  methods: {\n    getData: async function () {\n      const formData = new FormData();\n      formData.append(\"_id\", this._id);\n      const response = await axios.post(this.$apiURL + \"/admin/products/fetchSingle\", formData, {\n        headers: this.$headers\n      });\n      if (response.data.status == \"success\") {\n        this.product = response.data.product;\n      } else {\n        swal.fire(\"Error\", response.data.message, \"error\");\n      }\n      const responseConfig = await axios.post(this.$apiURL + \"/getConfigurations\", null);\n      if (responseConfig.data.status == \"success\") {\n        let configurations = responseConfig.data.configurations;\n        this.categories = configurations.categories || [];\n      }\n    },\n    editProduct: async function () {\n      const form = event.target;\n      const formData = new FormData(form);\n      formData.append(\"_id\", this._id);\n      const response = await axios.post(this.$apiURL + \"/admin/products/update\", formData, {\n        headers: this.$headers\n      });\n      swal.fire(\"Edit product\", response.data.message, response.data.status);\n    }\n  },\n  mounted: function () {\n    this.getData();\n  }\n};","map":{"version":3,"mappings":"AAoDI,OAAOA,KAAI,MAAO,OAAM;AACxB,OAAOC,IAAG,MAAO,aAAY;AAE7B,eAAe;EACXC,IAAI,GAAG;IACH,OAAO;MACHC,GAAG,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,GAAG;MAC3BG,OAAO,EAAE;IACb;EACJ,CAAC;EAEDC,OAAO,EAAE;IAELC,OAAO,EAAE,kBAAkB;MACvB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,EAAC;MAC9BD,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAE,IAAI,CAACR,GAAG;MAE/B,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,6BAA6B,EAC5CL,QAAQ,EACR;QACIM,OAAO,EAAE,IAAI,CAACC;MAClB,EACJ;MAEA,IAAIJ,QAAQ,CAACV,IAAI,CAACe,MAAK,IAAK,SAAS,EAAE;QACnC,IAAI,CAACX,OAAM,GAAIM,QAAQ,CAACV,IAAI,CAACI,OAAM;MACvC,OAAO;QACHL,IAAI,CAACiB,IAAI,CAAC,OAAO,EAAEN,QAAQ,CAACV,IAAI,CAACiB,OAAO,EAAE,OAAO;MACrD;MAEA,MAAMC,cAAa,GAAI,MAAMpB,KAAK,CAACa,IAAI,CACnC,IAAI,CAACC,OAAM,GAAI,oBAAoB,EACnC,IAAG,CACP;MAEA,IAAIM,cAAc,CAAClB,IAAI,CAACe,MAAK,IAAK,SAAS,EAAE;QACzC,IAAII,cAAa,GAAID,cAAc,CAAClB,IAAI,CAACmB,cAAa;QACtD,IAAI,CAACC,UAAS,GAAID,cAAc,CAACC,UAAS,IAAK,EAAC;MACpD;IACJ,CAAC;IAEDC,WAAW,EAAE,kBAAkB;MAC3B,MAAMC,IAAG,GAAIC,KAAK,CAACC,MAAK;MACxB,MAAMjB,QAAO,GAAI,IAAIC,QAAQ,CAACc,IAAI;MAClCf,QAAQ,CAACE,MAAM,CAAC,KAAK,EAAE,IAAI,CAACR,GAAG;MAE/B,MAAMS,QAAO,GAAI,MAAMZ,KAAK,CAACa,IAAI,CAC7B,IAAI,CAACC,OAAM,GAAI,wBAAwB,EACvCL,QAAQ,EACR;QACIM,OAAO,EAAE,IAAI,CAACC;MAClB,EACJ;MAEAf,IAAI,CAACiB,IAAI,CAAC,cAAc,EAAEN,QAAQ,CAACV,IAAI,CAACiB,OAAO,EAAEP,QAAQ,CAACV,IAAI,CAACe,MAAM;IACzE;EACJ,CAAC;EAEDU,OAAO,EAAE,YAAY;IACjB,IAAI,CAACnB,OAAO,EAAC;EACjB;AACJ","names":["axios","swal","data","_id","$route","params","product","methods","getData","formData","FormData","append","response","post","$apiURL","headers","$headers","status","fire","message","responseConfig","configurations","categories","editProduct","form","event","target","mounted"],"sourceRoot":"","sources":["/home/aka/Documents/react-nativ/ecommerce-mevn-stack/admin/src/components/EditProduct.vue"],"sourcesContent":["<template>\n    <!-- End Navbar -->\n    <div class=\"container-fluid py-4\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"card\">\n                    <div class=\"card-header\">\n                        <h4 class=\"font-weight-bolder\">Edit product</h4>\n                    </div>\n\n                    <div class=\"card-body\">\n                        <form v-on:submit.prevent=\"editProduct\" enctype=\"multipart/form-data\" v-if=\"product != null\">\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Name</label>\n                                <input type=\"text\" class=\"form-control\" autocomplete=\"off\" name=\"name\" v-bind:value=\"product.name\" required />\n                            </div>\n\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Description</label>\n                                <textarea name=\"description\" style=\"margin-top: 40px;\" class=\"form-control\" required v-bind:value=\"product.description\"></textarea>\n                            </div>\n\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Price ($)</label>\n                                <input type=\"number\" min=\"0\" name=\"price\" autocomplete=\"off\" class=\"form-control\" required v-bind:value=\"product.price\" />\n                            </div>\n\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Items in stock (0 means unlimited, for digital products)</label>\n                                <input type=\"number\" min=\"0\" autocomplete=\"off\" name=\"itemsInStock\" class=\"form-control\" v-bind:value=\"product.itemsInStock || 0\" required />\n                            </div>\n\n                            <div class=\"input-group input-group-outline mb-3\">\n                                <label class=\"form-label no-left-margin\">Images</label>\n                                <input type=\"file\" multiple accept=\"image/*\" name=\"images\" class=\"form-control\" />\n                            </div>\n\n                            <img v-for=\"(image) in product.images\" v-bind:src=\"$apiURL + '/' + image\" style=\"display: inline-block; width: 100%; margin-top: 10px;\" />\n\n                            <div class=\"text-center\">\n                                <button type=\"submit\" class=\"btn btn-lg bg-gradient-primary btn-lg w-100 mt-4 mb-0\">Edit product</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    import axios from \"axios\"\n    import swal from \"sweetalert2\"\n\n    export default {\n        data() {\n            return {\n                _id: this.$route.params._id,\n                product: null\n            }\n        },\n\n        methods: {\n\n            getData: async function () {\n                const formData = new FormData()\n                formData.append(\"_id\", this._id)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/admin/products/fetchSingle\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                if (response.data.status == \"success\") {\n                    this.product = response.data.product\n                } else {\n                    swal.fire(\"Error\", response.data.message, \"error\")\n                }\n\n                const responseConfig = await axios.post(\n                    this.$apiURL + \"/getConfigurations\",\n                    null\n                )\n\n                if (responseConfig.data.status == \"success\") {\n                    let configurations = responseConfig.data.configurations\n                    this.categories = configurations.categories || []\n                }\n            },\n\n            editProduct: async function () {\n                const form = event.target\n                const formData = new FormData(form)\n                formData.append(\"_id\", this._id)\n\n                const response = await axios.post(\n                    this.$apiURL + \"/admin/products/update\",\n                    formData,\n                    {\n                        headers: this.$headers\n                    }\n                )\n\n                swal.fire(\"Edit product\", response.data.message, response.data.status)\n            }\n        },\n\n        mounted: function () {\n            this.getData()\n        }\n    }\n</script>\n\n<style>\n    .no-left-margin::before {\n        width: auto !important;\n    }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}